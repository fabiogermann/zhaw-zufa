#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
Waterfall
\end_layout

\begin_layout Itemize
Requirements
\end_layout

\begin_layout Itemize
Design
\end_layout

\begin_layout Itemize
Implementation
\end_layout

\begin_layout Itemize
Verification
\end_layout

\begin_layout Itemize
Maintanance
\end_layout

\begin_layout Section*
Unified Process
\end_layout

\begin_layout Standard
Prinzipien: 
\end_layout

\begin_layout Itemize
iterativ inkrementell
\end_layout

\begin_layout Itemize
auf Usecases aufgebaut
\end_layout

\begin_layout Itemize
Architektur im Mittelpunkt
\end_layout

\begin_layout Itemize
Fokus auf Risiken
\end_layout

\begin_layout Standard
Probleme:
\end_layout

\begin_layout Itemize
prozess/artefakt lastig
\end_layout

\begin_layout Itemize
muss auf jeden Fall zugeschneidert werden
\end_layout

\begin_layout Section*
HÃ¤ufige Probleme
\end_layout

\begin_layout Itemize
poorly scoped projects
\end_layout

\begin_layout Itemize
technical or integration issue
\end_layout

\begin_layout Itemize
60% of functionality not used, ofter or always used functionality only 20%
\end_layout

\begin_layout Section*
Agile 
\end_layout

\begin_layout Subsection*
Manifesto
\end_layout

\begin_layout Enumerate
Customer collaboration - over contract negotiation
\end_layout

\begin_layout Enumerate
Responding to change - over following a plan
\end_layout

\begin_layout Enumerate
Working software - over comprehensive documentation
\end_layout

\begin_layout Enumerate
Individuals and interactions - over processes and tools
\end_layout

\begin_layout Subsection*
Principles
\end_layout

\begin_layout Itemize
business works together with developers on daily basis
\end_layout

\begin_layout Itemize
build projects around motivated individuals - trust, self organizing team
\end_layout

\begin_layout Itemize
efficient and effective communication
\end_layout

\begin_layout Itemize
measure of progess is the working software
\end_layout

\begin_layout Itemize
sustainable development -> constant pace indefinitely
\end_layout

\begin_layout Section*
eXtreme Programming
\end_layout

\begin_layout Subsection*
4 variables
\end_layout

\begin_layout Enumerate
Time
\end_layout

\begin_layout Enumerate
Resource
\end_layout

\begin_layout Enumerate
Quality
\end_layout

\begin_layout Enumerate
Scope
\end_layout

\begin_layout Standard
Customers and Managers can only set 3 Variables - 4th is set by dev team.
\end_layout

\begin_layout Subsection*
Values
\end_layout

\begin_layout Itemize
Communication: work together, daily communication
\end_layout

\begin_layout Itemize
Simplicity: maximize the value created, resonable costs
\end_layout

\begin_layout Itemize
Feedback: demonstrate early, iteration delivers working software, adapt
 process
\end_layout

\begin_layout Itemize
Courage: truth about progess, no documented excuses, adapt to change
\end_layout

\begin_layout Itemize
Respect: business expertise vs dev expertise
\end_layout

\begin_layout Subsection*
Principles
\end_layout

\begin_layout Itemize
rapid feedback
\end_layout

\begin_layout Itemize
simplicity
\end_layout

\begin_layout Itemize
incremental change
\end_layout

\begin_layout Itemize
(embrace change)
\end_layout

\begin_layout Itemize
quality work
\end_layout

\begin_layout Itemize
(teach learning)
\end_layout

\begin_layout Itemize
(concrete experimants)
\end_layout

\begin_layout Itemize
(honest communication)
\end_layout

\begin_layout Itemize
(work with peoples instincts)
\end_layout

\begin_layout Itemize
(accepted responsibility)
\end_layout

\begin_layout Subsection*
Practices
\end_layout

\begin_layout Itemize
Planning Game: balance between business(scope, priority, release composition,
 release dates) and tecnical (estimates, consequences, process, detail schedule)
\end_layout

\begin_layout Itemize
small releases
\end_layout

\begin_layout Itemize
metaphor: everybody has a common understanding, shared vocabulary
\end_layout

\begin_layout Itemize
simple design: no duplicate logic
\end_layout

\begin_layout Itemize
testing (automated testing)
\end_layout

\begin_layout Itemize
refacoring
\end_layout

\begin_layout Itemize
pair programming
\end_layout

\begin_layout Itemize
collective ownership: anybody who sees an opportunity to add value is req.
 to do it
\end_layout

\begin_layout Itemize
continuous integration: automated integration and testing , daily
\end_layout

\begin_layout Itemize
40h week
\end_layout

\begin_layout Itemize
on-site customer
\end_layout

\begin_layout Itemize
coding standards
\end_layout

\end_body
\end_document
